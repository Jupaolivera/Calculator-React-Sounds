{"version":3,"sources":["components/Calculator/Styled/Styled.js","components/Calculator/Calculator.js","config/configParticles.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","freeverbNumbers","Tone","toDestination","dampening","roomSize","value","numbers","c0","d0","e0","f0","g0","connect","samplesList","samplesListMaxIndex","length","freeverbEqual","equal","clear","operations","operationsList","Calculator","useState","current","setCurrent","previous","setPrevious","setOperation","appendValue","el","console","log","target","getAttribute","toString","includes","triggerAttack","Math","floor","random","handleDelete","slice","handleClear","chooseOperation","calculate","undefined","result","previousNumber","parseFloat","currentNumber","isNaN","preventDefaultEnter","event","key","preventDefault","useKeypress","Infinity","operationKey","onClick","onKeyPress","data","particlesConfig","fullScreen","enable","zIndex","particles","number","density","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detectsOn","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","className","style","position","overflow","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e06b5a9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    align-content: center;\r\n    width: 400px;\r\n    margin: 40px auto;\r\n    grid-template-columns: repeat(4, 100px);\r\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\r\n    box-shadow: 4px 4px 20px #333;\r\n    border-radius: 10px;\r\n    border: 2px ridge #333;\r\n`;\r\n\r\nexport const Screen = styled.div`\r\n    grid-column: 1 / -1; //columnas principio a fin\r\n    background-color: rgba(60, 64, 67, 0.7);\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n    word-break: break-all;\r\n    text-align: right;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    border: 2px ridge #333;\r\n    border-top: 0px; //evita double border\r\n`;\r\n\r\nexport const Previous = styled.div`\r\n    color: rgba(255, 255, 255, 0.8);\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nexport const Current = styled.div`\r\n    color: white;\r\n    font-size: 2.5rem;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    border: 0.5px outset white;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    &:hover {\r\n        background-color: transparent;\r\n    }\r\n\r\n    ${({ gridSpan }) => gridSpan && `grid-column: span ${gridSpan};`}\r\n    ${({ operation }) => operation && `background-color: gray;`}\r\n    ${({ control }) => control && `background-color: rgba(135, 206, 235, 0.7);`}\r\n    ${({ equals }) =>\r\n        equals && `border-bottom-right-radius: 10px; background-color: gray;`}\r\n    ${({ period }) =>\r\n        period &&\r\n        `border-bottom-left-radius: 10px; background-color: rgba(200, 206, 235, 0.7);`}\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Screen, Previous, Current, Button } from \"./Styled/Styled\";\r\nimport useKeypress from \"react-use-keypress\";\r\nimport * as Tone from \"tone\";\r\n\r\n//SOUNDS SETUP\r\n\r\n// NUMBERS //\r\nconst freeverbNumbers = new Tone.Freeverb().toDestination();\r\nfreeverbNumbers.dampening = 100;\r\nfreeverbNumbers.roomSize.value = 0.4;\r\n\r\nconst numbers = new Tone.Sampler({\r\n    c0: \"1.wav\",\r\n    d0: \"2.wav\",\r\n    e0: \"3.wav\",\r\n    f0: \"4.wav\",\r\n    g0: \"5.wav\",\r\n}).connect(freeverbNumbers);\r\n\r\nconst samplesList = [\"c0\", \"d0\", \"e0\", \"f0\", \"g0\"];\r\n\r\nconst samplesListMaxIndex = samplesList.length - 1;\r\n\r\n//EQUAL SIGN//\r\nconst freeverbEqual = new Tone.Freeverb().toDestination();\r\nfreeverbEqual.roomSize.value = 0.8;\r\nfreeverbEqual.dampening = 300;\r\n\r\nconst equal = new Tone.Sampler({\r\n    c0: \"6 equal.wav\",\r\n}).connect(freeverbEqual);\r\n\r\n//CLEAR SIGN//\r\nconst clear = new Tone.Sampler({\r\n    c0: \"7 clear.wav\",\r\n}).toDestination();\r\n\r\n//OPERATIONS//\r\nconst operations = new Tone.Sampler({\r\n    c0: \"8 mas.wav\",\r\n    d0: \"9 menos.wav\",\r\n    e0: \"10 mult.wav\",\r\n    f0: \"11 divi.wav\",\r\n    g0: \"12 backspace.wav\",\r\n}).toDestination();\r\n\r\nconst operationsList = [\"c0\", \"d0\", \"e0\", \"f0\"];\r\n\r\nconst Calculator = () => {\r\n    const [current, setCurrent] = useState(\"\");\r\n    const [previous, setPrevious] = useState(\"\");\r\n    const [operation, setOperation] = useState(\"\");\r\n\r\n    const appendValue = (el) => {\r\n        console.log(current);\r\n        const value = el.target.getAttribute(\"data\");\r\n        if (\r\n            value !== \".\" ||\r\n            (value === \".\" && !current.toString().includes(\".\"))\r\n        ) {\r\n            setCurrent(current + value);\r\n            numbers.triggerAttack(\r\n                samplesList[\r\n                    Math.floor(Math.random() * (samplesListMaxIndex + 1)) //random int formula  ---> Math.floor(Math.random()*(max-min+1)+min);\r\n                ]\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        if (current.toString()[0] === \"-\") {\r\n            setCurrent(\"\");\r\n        } else {\r\n            setCurrent(current.toString().slice(0, -1));\r\n        }\r\n\r\n        if (current !== \"\") {\r\n            operations.triggerAttack(\"g0\");\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setCurrent(\"\");\r\n        setPrevious(\"\");\r\n        setOperation(\"\");\r\n        if (current !== \"\" || previous !== \"\") {\r\n            clear.triggerAttack(\"c0\");\r\n        }\r\n    };\r\n\r\n    const chooseOperation = (el) => {\r\n        if (current === \"\") {\r\n            return;\r\n        }\r\n        if (previous !== \"\") {\r\n            let value = calculate();\r\n            setPrevious(value);\r\n            switch (el.target.getAttribute(\"data\")) {\r\n                case \"×\":\r\n                    operations.triggerAttack(operationsList[0]);\r\n                    break;\r\n                case \"÷\":\r\n                    operations.triggerAttack(operationsList[1]);\r\n                    break;\r\n                case \"+\":\r\n                    operations.triggerAttack(operationsList[2]);\r\n                    break;\r\n                case \"-\":\r\n                    operations.triggerAttack(operationsList[3]);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            setPrevious(current);\r\n            switch (el.target.getAttribute(\"data\")) {\r\n                case \"×\":\r\n                    operations.triggerAttack(operationsList[0]);\r\n                    break;\r\n                case \"÷\":\r\n                    operations.triggerAttack(operationsList[1]);\r\n\r\n                    break;\r\n                case \"+\":\r\n                    operations.triggerAttack(operationsList[2]);\r\n\r\n                    break;\r\n                case \"-\":\r\n                    operations.triggerAttack(operationsList[3]);\r\n\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setCurrent(\"\");\r\n        setOperation(el.target.getAttribute(\"data\"));\r\n    };\r\n\r\n    const equals = () => {\r\n        let value = calculate();\r\n        if (value === undefined || value === null) {\r\n            return;\r\n        } else {\r\n            setCurrent(value);\r\n            setPrevious(\"\");\r\n            setOperation(\"\");\r\n        }\r\n        equal.triggerAttack(\"c0\");\r\n    };\r\n    const calculate = () => {\r\n        let result;\r\n        let previousNumber = parseFloat(previous);\r\n        let currentNumber = parseFloat(current);\r\n\r\n        if (isNaN(previousNumber) || isNaN(currentNumber)) {\r\n            return;\r\n        } else {\r\n            switch (operation) {\r\n                case \"÷\":\r\n                    if (currentNumber === 0) {\r\n                        //no division by zero allowed\r\n                        handleClear();\r\n                        break;\r\n                    } else {\r\n                        result = previousNumber / currentNumber;\r\n                        break;\r\n                    }\r\n                case \"×\":\r\n                    result = previousNumber * currentNumber;\r\n                    break;\r\n                case \"+\":\r\n                    result = previousNumber + currentNumber;\r\n                    break;\r\n                case \"-\":\r\n                    result = previousNumber - currentNumber;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const preventDefaultEnter = (event) => {\r\n        if (event.key === \"Enter\" /* Enter */) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    useKeypress(\r\n        [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \".\"],\r\n        (event) => {\r\n            let samplesListMaxIndex = samplesList.length - 1;\r\n\r\n            const value = event.key;\r\n            if (current === Infinity || current === -Infinity) {\r\n                setCurrent(value);\r\n                numbers.triggerAttack(\r\n                    samplesList[\r\n                        Math.floor(\r\n                            Math.random() * (samplesListMaxIndex - 0 + 1) + 0\r\n                        )\r\n                    ]\r\n                );\r\n            } else if (\r\n                value !== \".\" ||\r\n                (value === \".\" && !current.toString().includes(\".\"))\r\n            ) {\r\n                setCurrent(current + value);\r\n                numbers.triggerAttack(\r\n                    samplesList[\r\n                        Math.floor(\r\n                            Math.random() * (samplesListMaxIndex - 0 + 1) + 0\r\n                        )\r\n                    ]\r\n                );\r\n            }\r\n        }\r\n    );\r\n\r\n    useKeypress([\"*\", \"/\", \"+\", \"-\"], (event) => {\r\n        let operationKey;\r\n        switch (event.key) {\r\n            case \"*\":\r\n                operationKey = \"×\";\r\n                break;\r\n            case \"/\":\r\n                operationKey = \"÷\";\r\n                break;\r\n            case \"+\":\r\n                operationKey = \"+\";\r\n                break;\r\n            case \"-\":\r\n                operationKey = \"-\";\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        if (current === \"\") {\r\n            return;\r\n        } else if (previous !== \"\") {\r\n            let value = calculate();\r\n            setPrevious(value);\r\n            switch (event.key) {\r\n                case \"*\":\r\n                    operations.triggerAttack(operationsList[0]);\r\n                    break;\r\n                case \"/\":\r\n                    operations.triggerAttack(operationsList[1]);\r\n                    break;\r\n                case \"+\":\r\n                    operations.triggerAttack(operationsList[2]);\r\n                    break;\r\n                case \"-\":\r\n                    operations.triggerAttack(operationsList[3]);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            setPrevious(current);\r\n            switch (event.key) {\r\n                case \"*\":\r\n                    operations.triggerAttack(operationsList[0]);\r\n                    break;\r\n                case \"/\":\r\n                    operations.triggerAttack(operationsList[1]);\r\n\r\n                    break;\r\n                case \"+\":\r\n                    operations.triggerAttack(operationsList[2]);\r\n\r\n                    break;\r\n                case \"-\":\r\n                    operations.triggerAttack(operationsList[3]);\r\n\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        setCurrent(\"\");\r\n        setOperation(operationKey);\r\n    });\r\n\r\n    useKeypress(\"Enter\", () => {\r\n        equals();\r\n    });\r\n\r\n    useKeypress(\"Backspace\", () => {\r\n        handleDelete();\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Screen>\r\n                <Previous>\r\n                    {previous}\r\n                    {operation}\r\n                </Previous>\r\n                <Current>{current}</Current>\r\n            </Screen>\r\n            <Button\r\n                gridSpan={2}\r\n                control\r\n                onClick={handleClear}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                AC\r\n            </Button>\r\n            <Button\r\n                control\r\n                onClick={handleDelete}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                DEL\r\n            </Button>\r\n            <Button\r\n                data={\"÷\"}\r\n                operation\r\n                onClick={chooseOperation}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                ÷\r\n            </Button>\r\n            <Button\r\n                data={\"7\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                7\r\n            </Button>\r\n            <Button\r\n                data={\"8\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                8\r\n            </Button>\r\n            <Button\r\n                data={\"9\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                9\r\n            </Button>\r\n            <Button\r\n                data={\"×\"}\r\n                operation\r\n                onClick={chooseOperation}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                ×\r\n            </Button>\r\n            <Button\r\n                data={\"4\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                4\r\n            </Button>\r\n            <Button\r\n                data={\"5\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                5\r\n            </Button>\r\n            <Button\r\n                data={\"6\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                6\r\n            </Button>\r\n            <Button\r\n                data={\"+\"}\r\n                operation\r\n                onClick={chooseOperation}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                +\r\n            </Button>\r\n            <Button\r\n                data={\"1\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                1\r\n            </Button>\r\n            <Button\r\n                data={\"2\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                2\r\n            </Button>\r\n            <Button\r\n                data={\"3\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                3\r\n            </Button>\r\n            <Button\r\n                data={\"-\"}\r\n                operation\r\n                onClick={chooseOperation}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                -\r\n            </Button>\r\n            <Button\r\n                period\r\n                data={\".\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                .\r\n            </Button>\r\n            <Button\r\n                data={\"0\"}\r\n                onClick={appendValue}\r\n                onKeyPress={preventDefaultEnter}\r\n            >\r\n                0\r\n            </Button>\r\n            <Button gridSpan={2} equals onClick={equals}>\r\n                =\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Calculator;\r\n","const particlesConfig = {\r\n    fullScreen: {\r\n        enable: true,\r\n        zIndex: 10,\r\n    },\r\n    particles: {\r\n        number: {\r\n            value: 80,\r\n            density: {\r\n                enable: true,\r\n                value_area: 800,\r\n            },\r\n        },\r\n        color: {\r\n            value: \"#ffffff\",\r\n        },\r\n        shape: {\r\n            type: \"circle\",\r\n            stroke: {\r\n                width: 0,\r\n                color: \"#000000\",\r\n            },\r\n            polygon: {\r\n                nb_sides: 5,\r\n            },\r\n            image: {\r\n                src: \"img/github.svg\",\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        opacity: {\r\n            value: 0.5,\r\n            random: false,\r\n            anim: {\r\n                enable: false,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false,\r\n            },\r\n        },\r\n        size: {\r\n            value: 1,\r\n            random: true,\r\n            anim: {\r\n                enable: false,\r\n                speed: 40,\r\n                size_min: 0.1,\r\n                sync: false,\r\n            },\r\n        },\r\n        line_linked: {\r\n            enable: true,\r\n            distance: 150,\r\n            color: \"#ffffff\",\r\n            opacity: 0.4,\r\n            width: 1,\r\n        },\r\n        move: {\r\n            enable: true,\r\n            speed: 6,\r\n            direction: \"none\",\r\n            random: false,\r\n            straight: false,\r\n            out_mode: \"out\",\r\n            bounce: false,\r\n            attract: {\r\n                enable: false,\r\n                rotateX: 600,\r\n                rotateY: 1200,\r\n            },\r\n        },\r\n    },\r\n    interactivity: {\r\n        detectsOn: \"window\",\r\n        events: {\r\n            onhover: {\r\n                enable: true,\r\n                mode: \"repulse\",\r\n            },\r\n            onclick: {\r\n                enable: true,\r\n                mode: \"push\",\r\n            },\r\n            resize: true,\r\n        },\r\n        modes: {\r\n            grab: {\r\n                distance: 400,\r\n                line_linked: {\r\n                    opacity: 1,\r\n                },\r\n            },\r\n            bubble: {\r\n                distance: 400,\r\n                size: 40,\r\n                duration: 2,\r\n                opacity: 8,\r\n                speed: 3,\r\n            },\r\n            repulse: {\r\n                distance: 150,\r\n                duration: 0.4,\r\n            },\r\n            push: {\r\n                particles_nb: 4,\r\n            },\r\n            remove: {\r\n                particles_nb: 2,\r\n            },\r\n        },\r\n    },\r\n    retina_detect: true,\r\n};\r\n\r\nexport default particlesConfig;\r\n","import Calculator from \"./components/Calculator/Calculator\";\r\nimport Particles from \"react-tsparticles\";\r\nimport particlesConfig from \"./config/configParticles\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div\r\n            className=\"App\"\r\n            style={{\r\n                position: \"relative\",\r\n                overflow: \"auto\",\r\n                height: \"100vh\",\r\n                width: \"100vw\",\r\n            }}\r\n        >\r\n            <div style={{ position: \"absolute\" }}>\r\n                <Particles\r\n                    height=\"100vh\"\r\n                    width=\"100vw\"\r\n                    params={particlesConfig}\r\n                />\r\n            </div>\r\n            <Calculator />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}