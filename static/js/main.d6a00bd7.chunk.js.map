{"version":3,"sources":["components/Calculator/Styled/Styled.js","components/Calculator/Calculator.js","config/configParticles.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","freeverbNumbers","Tone","toDestination","dampening","roomSize","value","numbers","c0","d0","e0","f0","g0","connect","samplesList","samplesListMaxIndex","length","freeverbEqual","equal","clear","operations","operationsList","Calculator","useState","current","setCurrent","previous","setPrevious","setOperation","appendValue","el","target","getAttribute","Infinity","triggerAttack","Math","floor","random","includes","handleDelete","toString","slice","handleClear","chooseOperation","calculate","undefined","result","previousNumber","parseFloat","currentNumber","isNaN","preventDefaultEnter","event","key","preventDefault","useKeypress","operationKey","onClick","onKeyPress","data","particlesConfig","fullScreen","enable","zIndex","particles","number","density","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detectsOn","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","className","style","position","overflow","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6a00bd7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: grid;\n    justify-content: center;\n    align-content: center;\n    width: 400px;\n    margin: 40px auto;\n    grid-template-columns: repeat(4, 100px);\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n    box-shadow: 4px 4px 20px #333;\n    border-radius: 10px;\n    border: 2px ridge #333;\n`;\n\nexport const Screen = styled.div`\n    grid-column: 1 / -1; //columnas principio a fin\n    background-color: rgba(60, 64, 67, 0.7);\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    padding: 10px;\n    word-wrap: break-word;\n    word-break: break-all;\n    text-align: right;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    border: 2px ridge #333;\n    border-top: 0px; //evita double border\n`;\n\nexport const Previous = styled.div`\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 1.5rem;\n`;\n\nexport const Current = styled.div`\n    color: white;\n    font-size: 2.5rem;\n`;\n\nexport const Button = styled.button`\n    cursor: pointer;\n    font-size: 2rem;\n    border: 0.5px outset white;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.7);\n    &:hover {\n        background-color: transparent;\n    }\n\n    ${({ gridSpan }) => gridSpan && `grid-column: span ${gridSpan};`}\n    ${({ operation }) => operation && `background-color: gray;`}\n    ${({ control }) => control && `background-color: rgba(135, 206, 235, 0.7);`}\n    ${({ equals }) =>\n        equals && `border-bottom-right-radius: 10px; background-color: gray;`}\n    ${({ period }) =>\n        period &&\n        `border-bottom-left-radius: 10px; background-color: rgba(200, 206, 235, 0.7);`}\n`;\n","import React, { useState } from \"react\";\nimport { Container, Screen, Previous, Current, Button } from \"./Styled/Styled\";\nimport useKeypress from \"react-use-keypress\";\nimport * as Tone from \"tone\";\n\n//SOUNDS SETUP\n\n// NUMBERS //\nconst freeverbNumbers = new Tone.Freeverb().toDestination();\nfreeverbNumbers.dampening = 100;\nfreeverbNumbers.roomSize.value = 0.4;\n\nconst numbers = new Tone.Sampler({\n    c0: \"1.wav\",\n    d0: \"2.wav\",\n    e0: \"3.wav\",\n    f0: \"4.wav\",\n    g0: \"5.wav\",\n}).connect(freeverbNumbers);\n\nconst samplesList = [\"c0\", \"d0\", \"e0\", \"f0\", \"g0\"];\n\nconst samplesListMaxIndex = samplesList.length - 1;\n\n//EQUAL SIGN//\nconst freeverbEqual = new Tone.Freeverb().toDestination();\nfreeverbEqual.roomSize.value = 0.8;\nfreeverbEqual.dampening = 300;\n\nconst equal = new Tone.Sampler({\n    c0: \"6 equal.wav\",\n}).connect(freeverbEqual);\n\n//CLEAR SIGN//\nconst clear = new Tone.Sampler({\n    c0: \"7 clear.wav\",\n}).toDestination();\n\n//OPERATIONS//\nconst operations = new Tone.Sampler({\n    c0: \"8 mas.wav\",\n    d0: \"9 menos.wav\",\n    e0: \"10 mult.wav\",\n    f0: \"11 divi.wav\",\n    g0: \"12 backspace.wav\",\n}).toDestination();\n\nconst operationsList = [\"c0\", \"d0\", \"e0\", \"f0\"];\n\nconst Calculator = () => {\n    const [current, setCurrent] = useState(\"\");\n    const [previous, setPrevious] = useState(\"\");\n    const [operation, setOperation] = useState(\"\");\n\n    const appendValue = (el) => {\n        const value = el.target.getAttribute(\"data\");\n        if (current === Infinity || current === -Infinity) {\n            setCurrent(value);\n            numbers.triggerAttack(\n                samplesList[\n                    Math.floor(Math.random() * (samplesListMaxIndex + 1)) //random int formula  ---> Math.floor(Math.random()*(max-min+1)+min);\n                ]\n            );\n        } else if (value !== \".\" || (value === \".\" && !current.includes(\".\"))) {\n            setCurrent(current + value);\n            numbers.triggerAttack(\n                samplesList[\n                    Math.floor(Math.random() * (samplesListMaxIndex + 1)) //random int formula  ---> Math.floor(Math.random()*(max-min+1)+min);\n                ]\n            );\n        }\n    };\n\n    const handleDelete = () => {\n        setCurrent(current.toString().slice(0, -1));\n        if (current !== \"\") {\n            operations.triggerAttack(\"g0\");\n        }\n    };\n\n    const handleClear = () => {\n        setCurrent(\"\");\n        setPrevious(\"\");\n        setOperation(\"\");\n        if (current !== \"\" || previous !== \"\") {\n            clear.triggerAttack(\"c0\");\n        }\n    };\n\n    const chooseOperation = (el) => {\n        if (current === \"\") {\n            return;\n        }\n        if (previous !== \"\") {\n            let value = calculate();\n            setPrevious(value);\n            switch (el.target.getAttribute(\"data\")) {\n                case \"×\":\n                    operations.triggerAttack(operationsList[0]);\n                    break;\n                case \"÷\":\n                    operations.triggerAttack(operationsList[1]);\n                    break;\n                case \"+\":\n                    operations.triggerAttack(operationsList[2]);\n                    break;\n                case \"-\":\n                    operations.triggerAttack(operationsList[3]);\n                    break;\n                default:\n                    return;\n            }\n        } else {\n            setPrevious(current);\n            switch (el.target.getAttribute(\"data\")) {\n                case \"×\":\n                    operations.triggerAttack(operationsList[0]);\n                    break;\n                case \"÷\":\n                    operations.triggerAttack(operationsList[1]);\n\n                    break;\n                case \"+\":\n                    operations.triggerAttack(operationsList[2]);\n\n                    break;\n                case \"-\":\n                    operations.triggerAttack(operationsList[3]);\n\n                    break;\n                default:\n                    return;\n            }\n        }\n\n        setCurrent(\"\");\n        setOperation(el.target.getAttribute(\"data\"));\n    };\n\n    const equals = () => {\n        let value = calculate();\n        if (value === undefined || value === null) {\n            return;\n        } else {\n            setCurrent(value);\n            setPrevious(\"\");\n            setOperation(\"\");\n        }\n        equal.triggerAttack(\"c0\");\n    };\n    const calculate = () => {\n        let result;\n        let previousNumber = parseFloat(previous);\n        let currentNumber = parseFloat(current);\n\n        if (isNaN(previousNumber) || isNaN(currentNumber)) {\n            return;\n        } else {\n            switch (operation) {\n                case \"÷\":\n                    if (currentNumber === 0) {\n                        //no division by zero allowed\n                        handleClear();\n                        break;\n                    } else {\n                        result = previousNumber / currentNumber;\n                        break;\n                    }\n                case \"×\":\n                    result = previousNumber * currentNumber;\n                    break;\n                case \"+\":\n                    result = previousNumber + currentNumber;\n                    break;\n                case \"-\":\n                    result = previousNumber - currentNumber;\n                    break;\n                default:\n                    return;\n            }\n        }\n        return result;\n    };\n\n    const preventDefaultEnter = (event) => {\n        if (event.key === \"Enter\" /* Enter */) {\n            event.preventDefault();\n        }\n    };\n\n    useKeypress([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"], (event) => {\n        let samplesListMaxIndex = samplesList.length - 1;\n        numbers.triggerAttack(\n            samplesList[\n                Math.floor(Math.random() * (samplesListMaxIndex - 0 + 1) + 0)\n            ]\n        );\n        const value = event.key;\n        if (current === Infinity || current === -Infinity) {\n            setCurrent(value);\n        } else if (value !== \".\" || (value === \".\" && !current.includes(\".\"))) {\n            setCurrent(current + value);\n        }\n    });\n\n    useKeypress([\"*\", \"/\", \"+\", \"-\"], (event) => {\n        let operationKey;\n        switch (event.key) {\n            case \"*\":\n                operationKey = \"×\";\n                break;\n            case \"/\":\n                operationKey = \"÷\";\n                break;\n            case \"+\":\n                operationKey = \"+\";\n                break;\n            case \"-\":\n                operationKey = \"-\";\n                break;\n            default:\n                return;\n        }\n        if (current === \"\") {\n            return;\n        } else if (previous !== \"\") {\n            let value = calculate();\n            setPrevious(value);\n            switch (event.key) {\n                case \"*\":\n                    operations.triggerAttack(operationsList[0]);\n                    break;\n                case \"/\":\n                    operations.triggerAttack(operationsList[1]);\n                    break;\n                case \"+\":\n                    operations.triggerAttack(operationsList[2]);\n                    break;\n                case \"-\":\n                    operations.triggerAttack(operationsList[3]);\n                    break;\n                default:\n                    return;\n            }\n        } else {\n            setPrevious(current);\n            switch (event.key) {\n                case \"*\":\n                    operations.triggerAttack(operationsList[0]);\n                    break;\n                case \"/\":\n                    operations.triggerAttack(operationsList[1]);\n\n                    break;\n                case \"+\":\n                    operations.triggerAttack(operationsList[2]);\n\n                    break;\n                case \"-\":\n                    operations.triggerAttack(operationsList[3]);\n\n                    break;\n                default:\n                    return;\n            }\n        }\n        setCurrent(\"\");\n        setOperation(operationKey);\n    });\n\n    useKeypress(\"Enter\", () => {\n        equals();\n    });\n\n    useKeypress(\"Backspace\", () => {\n        handleDelete();\n    });\n\n    return (\n        <Container>\n            <Screen>\n                <Previous>\n                    {previous}\n                    {operation}\n                </Previous>\n                <Current>{current}</Current>\n            </Screen>\n            <Button\n                gridSpan={2}\n                control\n                onClick={handleClear}\n                onKeyPress={preventDefaultEnter}\n            >\n                AC\n            </Button>\n            <Button\n                control\n                onClick={handleDelete}\n                onKeyPress={preventDefaultEnter}\n            >\n                DEL\n            </Button>\n            <Button\n                data={\"÷\"}\n                operation\n                onClick={chooseOperation}\n                onKeyPress={preventDefaultEnter}\n            >\n                ÷\n            </Button>\n            <Button\n                data={\"7\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                7\n            </Button>\n            <Button\n                data={\"8\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                8\n            </Button>\n            <Button\n                data={\"9\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                9\n            </Button>\n            <Button\n                data={\"×\"}\n                operation\n                onClick={chooseOperation}\n                onKeyPress={preventDefaultEnter}\n            >\n                ×\n            </Button>\n            <Button\n                data={\"4\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                4\n            </Button>\n            <Button\n                data={\"5\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                5\n            </Button>\n            <Button\n                data={\"6\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                6\n            </Button>\n            <Button\n                data={\"+\"}\n                operation\n                onClick={chooseOperation}\n                onKeyPress={preventDefaultEnter}\n            >\n                +\n            </Button>\n            <Button\n                data={\"1\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                1\n            </Button>\n            <Button\n                data={\"2\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                2\n            </Button>\n            <Button\n                data={\"3\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                3\n            </Button>\n            <Button\n                data={\"-\"}\n                operation\n                onClick={chooseOperation}\n                onKeyPress={preventDefaultEnter}\n            >\n                -\n            </Button>\n            <Button\n                period\n                data={\".\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                .\n            </Button>\n            <Button\n                data={\"0\"}\n                onClick={appendValue}\n                onKeyPress={preventDefaultEnter}\n            >\n                0\n            </Button>\n            <Button gridSpan={2} equals onClick={equals}>\n                =\n            </Button>\n        </Container>\n    );\n};\n\nexport default Calculator;\n","const particlesConfig = {\n    fullScreen: {\n        enable: true,\n        zIndex: 10,\n    },\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800,\n            },\n        },\n        color: {\n            value: \"#ffffff\",\n        },\n        shape: {\n            type: \"circle\",\n            stroke: {\n                width: 0,\n                color: \"#000000\",\n            },\n            polygon: {\n                nb_sides: 5,\n            },\n            image: {\n                src: \"img/github.svg\",\n                width: 100,\n                height: 100,\n            },\n        },\n        opacity: {\n            value: 0.5,\n            random: false,\n            anim: {\n                enable: false,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: false,\n            },\n        },\n        size: {\n            value: 1,\n            random: true,\n            anim: {\n                enable: false,\n                speed: 40,\n                size_min: 0.1,\n                sync: false,\n            },\n        },\n        line_linked: {\n            enable: true,\n            distance: 150,\n            color: \"#ffffff\",\n            opacity: 0.4,\n            width: 1,\n        },\n        move: {\n            enable: true,\n            speed: 6,\n            direction: \"none\",\n            random: false,\n            straight: false,\n            out_mode: \"out\",\n            bounce: false,\n            attract: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 1200,\n            },\n        },\n    },\n    interactivity: {\n        detectsOn: \"window\",\n        events: {\n            onhover: {\n                enable: true,\n                mode: \"repulse\",\n            },\n            onclick: {\n                enable: true,\n                mode: \"push\",\n            },\n            resize: true,\n        },\n        modes: {\n            grab: {\n                distance: 400,\n                line_linked: {\n                    opacity: 1,\n                },\n            },\n            bubble: {\n                distance: 400,\n                size: 40,\n                duration: 2,\n                opacity: 8,\n                speed: 3,\n            },\n            repulse: {\n                distance: 150,\n                duration: 0.4,\n            },\n            push: {\n                particles_nb: 4,\n            },\n            remove: {\n                particles_nb: 2,\n            },\n        },\n    },\n    retina_detect: true,\n};\n\nexport default particlesConfig;\n","import Calculator from \"./components/Calculator/Calculator\";\nimport Particles from \"react-tsparticles\";\nimport particlesConfig from \"./config/configParticles\";\n\nfunction App() {\n    return (\n        <div\n            className=\"App\"\n            style={{\n                position: \"relative\",\n                overflow: \"auto\",\n                height: \"100vh\",\n                width: \"100vw\",\n            }}\n        >\n            <div style={{ position: \"absolute\" }}>\n                <Particles\n                    height=\"100vh\"\n                    width=\"100vw\"\n                    params={particlesConfig}\n                />\n            </div>\n            <Calculator />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}